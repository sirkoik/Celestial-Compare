{"version":3,"sources":["store/objects.js","store/ObjectContext.js","Components/SortCompare.js","Components/SidebySideCompare/CompareSide/CompareSide.js","Components/SidebySideCompare/SideBySideCompare.js","App.js","reportWebVitals.js","index.js","Components/SidebySideCompare/SideBySideCompare.module.css"],"names":["fieldAttrsObj","id","name","sortOrder","order","fieldType","radius","unit","surface","volume","mass","objectsTemplate","ObjectContext","React","createContext","objects","sortBy","sorterHandler","sortDirectionHandler","sortDirection","fieldAttr","ObjectContextProvider","props","useState","setSortBy","setSortDirection","useMemo","sortFn","a","b","localeCompare","Array","from","sort","Provider","value","getObj","objIndex","findIndex","object","event","target","children","SortCompare","objCtx","useContext","fieldList","Object","keys","map","key","sortedObjects","sortDirectionText","className","onChange","CompareSide","id2","obj1","id1","obj2","keys1","keys2","val1","ratio","ratioRounded","toFixed","ratioUnits","fieldAttrs","output","SideBySideCompare","setId1","setId2","objList","classes","Compare","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.94233e68.chunk.js","sourcesContent":["export const fieldAttrsObj = {\r\n  id: {\r\n    name: \"ID\",\r\n    sortOrder: \"asc\",\r\n  },\r\n  order: {\r\n    name: \"Order\",\r\n    sortOrder: \"asc\",\r\n  },\r\n  name: {\r\n    name: \"Name\",\r\n    fieldType: \"string\",\r\n    sortOrder: \"asc\",\r\n  },\r\n  radius: {\r\n    name: \"Radius\",\r\n    unit: \"km\",\r\n    sortOrder: \"desc\",\r\n  },\r\n  surface: {\r\n    name: \"Surface area\",\r\n    unit: \"sq km\",\r\n    sortOrder: \"desc\",\r\n  },\r\n  \"surface-land\": {\r\n    name: \"Land surface\",\r\n    unit: \"sq km\",\r\n    sortOrder: \"desc\",\r\n  },\r\n  \"surface-water\": {\r\n    name: \"Water surface\",\r\n    unit: \"sq km\",\r\n    sortOrder: \"desc\",\r\n  },\r\n  volume: {\r\n    name: \"Volume\",\r\n    unit: \"cubic km\",\r\n    sortOrder: \"desc\",\r\n  },\r\n  mass: {\r\n    name: \"Mass\",\r\n    unit: \"kg\",\r\n    sortOrder: \"desc\",\r\n  },\r\n};\r\n\r\nexport const objectsTemplate = [\r\n  {\r\n    id: 0,\r\n    order: 1,\r\n    name: \"Mercury\",\r\n    radius: 2439.7,\r\n    surface: 7.48e7,\r\n    \"surface-land\": 7.48e7,\r\n    volume: 6.083e10,\r\n    mass: 3.3011e23,\r\n  },\r\n  {\r\n    id: 1,\r\n    order: 2,\r\n    name: \"Venus\",\r\n    radius: 6051.8,\r\n    surface: 4.6023e8,\r\n    \"surface-land\": 4.6023e8,\r\n    volume: 9.2843e11,\r\n    mass: 4.8675e24,\r\n  },\r\n  {\r\n    id: 2,\r\n    order: 3,\r\n    name: \"Earth\",\r\n    radius: 6378.137,\r\n    surface: 510067420,\r\n    \"surface-land\": 148940000,\r\n    \"surface-water\": 361132000,\r\n    volume: 1.08321e12,\r\n    mass: 5.97237e24,\r\n  },\r\n  {\r\n    id: 3,\r\n    order: 4,\r\n    name: \"Mars\",\r\n    radius: 3396.2,\r\n    surface: 144798500,\r\n    \"surface-land\": 144798500,\r\n    volume: 1.6318e11,\r\n    mass: 6.4171e23,\r\n  },\r\n];\r\n","import React, { useState, useMemo } from \"react\";\r\nimport { fieldAttrsObj, objectsTemplate } from \"./objects.js\";\r\n\r\nconst ObjectContext = React.createContext({\r\n  objects: [],\r\n  sortBy: \"\",\r\n  sorterHandler: () => {},\r\n  sortDirectionHandler: () => {},\r\n  sortDirection: \"\",\r\n  fieldAttr: \"\",\r\n  fieldAttrsObj: [],\r\n});\r\n\r\nexport const ObjectContextProvider = (props) => {\r\n  const [sortBy, setSortBy] = useState(\"order\");\r\n  const [sortDirection, setSortDirection] = useState(\"\");\r\n\r\n  const sorterHandler = (event) => {\r\n    setSortBy(event.target.value);\r\n  };\r\n\r\n  const sortDirectionHandler = (event) => {\r\n    setSortDirection(event.target.value);\r\n  };\r\n\r\n  // getObj: get a specific object from the array based on id\r\n  const getObj = (id) => {\r\n    const objIndex = objects.findIndex((object) => object.id === +id);\r\n\r\n    return objects[objIndex];\r\n  };\r\n\r\n  // objects: The sorted objects array.\r\n  // makes use of the useMemo hook, which watches for changes in sortBy and sortDirection.\r\n  // if either of those change, the function returns a copy of the orignal array that is sorted.\r\n  const objects = useMemo(() => {\r\n    // const fieldAttr = getField(sortBy);\r\n    const fieldAttr = fieldAttrsObj[sortBy];\r\n\r\n    // set object sort to user sort order. Otherwise, use field default sort order.\r\n    const sortOrderSet =\r\n      sortDirection !== \"\" ? sortDirection : fieldAttr.sortOrder;\r\n\r\n    // use different sort functions depending on ascending / descending or number / string.\r\n    let sortFn = (a, b) => (b[sortBy] || 0) - (a[sortBy] || 0);\r\n    if (sortOrderSet === \"asc\") {\r\n      sortFn = (a, b) => (a[sortBy] || 0) - (b[sortBy] || 0);\r\n      if (fieldAttr.fieldType === \"string\")\r\n        sortFn = (a, b) => (a[sortBy] + \"\").localeCompare(b[sortBy]);\r\n    } else {\r\n      sortFn = (a, b) => b[sortBy] - a[sortBy];\r\n      if (fieldAttr.fieldType === \"string\")\r\n        sortFn = (a, b) => (b[sortBy] + \"\").localeCompare(a[sortBy]);\r\n    }\r\n\r\n    // sort the objects based on the chosen sortFn.\r\n    return Array.from(objectsTemplate).sort(sortFn);\r\n  }, [sortBy, sortDirection]);\r\n\r\n  //const fieldAttr = getField(sortBy);\r\n  const fieldAttr = fieldAttrsObj[sortBy];\r\n\r\n  return (\r\n    <ObjectContext.Provider\r\n      value={{\r\n        objects: objects,\r\n        sortBy: sortBy,\r\n        getObj: getObj,\r\n        sorterHandler: sorterHandler,\r\n        sortDirection: sortDirection,\r\n        sortDirectionHandler: sortDirectionHandler,\r\n        fieldAttr: fieldAttr,\r\n        fieldAttrsObj: fieldAttrsObj,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ObjectContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ObjectContext;\r\n","import React, { useContext } from \"react\";\r\nimport ObjectContext from \"../store/ObjectContext\";\r\n\r\nconst SortCompare = () => {\r\n  const objCtx = useContext(ObjectContext);\r\n\r\n  const fieldList = Object.keys(objCtx.fieldAttrsObj).map((key) => {\r\n    if (key === \"id\") return null;\r\n\r\n    return (\r\n      <option value={key} key={key}>\r\n        {objCtx.fieldAttrsObj[key].name}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  const sortedObjects = objCtx.objects.map((object) => {\r\n    return (\r\n      <li key={object.name}>\r\n        {object.name}: {object[objCtx.sortBy] || 0} {objCtx.fieldAttr.unit}\r\n      </li>\r\n    );\r\n  });\r\n\r\n  const sortDirection = objCtx.sortDirection || objCtx.fieldAttr.sortOrder;\r\n  const sortDirectionText =\r\n    sortDirection === \"asc\" ? \"ascending\" : \"descending\";\r\n\r\n  return (\r\n    <div className=\"SortCompare\">\r\n      <form>\r\n        <select name=\"obj-sorter\" onChange={objCtx.sorterHandler}>\r\n          {fieldList}\r\n        </select>\r\n        <select name=\"obj-sortdirection\" onChange={objCtx.sortDirectionHandler}>\r\n          <option value=\"\">-</option>\r\n          <option value=\"asc\">Ascending</option>\r\n          <option value=\"desc\">Descending</option>\r\n        </select>\r\n      </form>\r\n      <p>\r\n        Objects, sorted by {objCtx.fieldAttr.name}, {sortDirectionText}\r\n        {}.\r\n      </p>\r\n      <ol>{sortedObjects}</ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SortCompare;\r\n","import React, { useContext } from \"react\";\r\nimport ObjectContext from \"../../../store/ObjectContext\";\r\n\r\nconst CompareSide = (props) => {\r\n  const objCtx = useContext(ObjectContext);\r\n\r\n  const output = () => {\r\n    const obj1 = objCtx.getObj(props.id1);\r\n    const obj2 = objCtx.getObj(props.id2);\r\n    // console.log(obj1, obj2);\r\n\r\n    let keys1 = Object.keys(obj1);\r\n    let keys2 = Object.keys(obj2);\r\n\r\n    const keys = keys1 <= keys2 ? keys1 : keys2;\r\n\r\n    return keys.map((key) => {\r\n      if (key === \"id\" || key === \"name\") return null;\r\n\r\n      const val1 = obj1[key] || 0;\r\n      const val2 = obj2[key] || 0;\r\n\r\n      const ratio = +val1 / +val2;\r\n      let ratioRounded = (100 * ratio).toFixed(1);\r\n      let ratioUnits = \"%\";\r\n      if (ratioRounded > 100) {\r\n        ratioRounded = ratio.toFixed(2);\r\n        ratioUnits = \"times\";\r\n      }\r\n\r\n      const fieldAttrs = objCtx.fieldAttrsObj[key];\r\n\r\n      return (\r\n        <tr key={key}>\r\n          <td>{fieldAttrs.name}</td>\r\n          <td>\r\n            {val1} {fieldAttrs.unit}\r\n          </td>\r\n          <td>\r\n            {ratioRounded} {ratioUnits}\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <table className=\"obj-compare\">\r\n      <thead>\r\n        <tr>\r\n          <td>-</td>\r\n          <td>Value</td>\r\n          <td>Compared to {objCtx.getObj(props.id2)[\"name\"]}</td>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{output()}</tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default CompareSide;\r\n","import React, { useContext, useState } from \"react\";\r\nimport ObjectContext from \"../../store/ObjectContext\";\r\nimport classes from \"./SideBySideCompare.module.css\";\r\nimport CompareSide from \"./CompareSide/CompareSide\";\r\n\r\nconst SideBySideCompare = () => {\r\n  const objCtx = useContext(ObjectContext);\r\n  const [id1, setId1] = useState(0);\r\n  const [id2, setId2] = useState(1);\r\n\r\n  const objList = objCtx.objects.map((object) => {\r\n    return (\r\n      <option key={object.id} value={object.id}>\r\n        {object.name}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  const comp1Handler = (event) => {\r\n    setId1(event.target.value);\r\n  };\r\n\r\n  const comp2Handler = (event) => {\r\n    setId2(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Compare}>\r\n      <div>\r\n        <select onChange={comp1Handler} value={id1}>\r\n          {objList}\r\n        </select>\r\n        <CompareSide id1={id1} id2={id2} />\r\n      </div>\r\n      <div>\r\n        <select onChange={comp2Handler} value={id2}>\r\n          {objList}\r\n        </select>\r\n        <CompareSide id1={id2} id2={id1} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBySideCompare;\r\n","// import logo from './logo.svg';\n// import './App.css';\n\nimport SortCompare from \"./Components/SortCompare\";\nimport SidebySideCompare from \"./Components/SidebySideCompare/SideBySideCompare\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortCompare />\n      <SidebySideCompare />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import './index.css';\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ObjectContextProvider } from \"./store/ObjectContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ObjectContextProvider>\n      <App />\n    </ObjectContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Compare\":\"SideBySideCompare_Compare__1Ose7\"};"],"sourceRoot":""}